int MaxSoFar(vector<int>&v)
    {
        int max_so_far=v[0], max_ending_here=0;
        for(int i=0;i<v.size();i++)
        {
            max_ending_here=max_ending_here+v[i];
            if(max_so_far<max_ending_here)
                max_so_far=max_ending_here;
            if(max_ending_here<0)
                max_ending_here=0;
        }
        return max_so_far;
    }
    
    int maxSubArray(vector<int>& nums) {
        int sum=accumulate(nums.begin(), nums.end(), 0);
        int sum1=MaxSoFar(nums);
        if(nums.size()==1)
            return nums[0];
        else
            return max(sum,sum1);
    }